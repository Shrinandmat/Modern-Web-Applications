6. a) Create an AngularJS application that demonstrates dependency injection and defines custom directives to extend HTML

<!DOCTYPE html>
<html ng-app="myApp">
<head>
    <title>AngularJS Custom Directives</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>

<div ng-controller="MyController">
    <h1>{{ greeting }}</h1>
    <my-directive></my-directive>
</div>

<script>
    var app = angular.module('myApp', []);

    app.directive('myDirective', function() {
        return {
            template: '<p>This is a custom directive!</p>'
        };
    });

  
    app.controller('MyController', ['$scope', function($scope) {
        $scope.greeting = 'Hello from AngularJS!';
    }]);
</script>

</body>
</html>

b) Write a Struts application that demonstrates the configuration of the framework, including the configuration file and directory structure.


web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    id="WebApp_ID" version="3.0">
    <display-name>struts2-example</display-name>

    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>

structs.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
    <package name="default" extends="struts-default">
        <action name="hello" class="com.example.HelloWorldAction" method="execute">
            <result name="success">/index.jsp</result>
        </action>
    </package>
</struts>



HelloWorldAction.java
package com.example;

import com.opensymphony.xwork2.ActionSupport;

public class HelloWorldAction extends ActionSupport {
    private static final long serialVersionUID = 1L;

    public String execute() {
        return SUCCESS;
    }
}
